#include <Arduino.h>
#include <Adafruit_GFX.h>
#include <Adafruit_NeoMatrix.h>
#include <Adafruit_NeoPixel.h>

//数字与子母数组
int new_char[62][5][3] = {
    {{1, 1, 1}, // 0
     {1, 0, 1},
     {1, 0, 1},
     {1, 0, 1},
     {1, 1, 1}},

    {{0, 1, 0}, // 1
     {1, 1, 0},
     {0, 1, 0},
     {0, 1, 0},
     {1, 1, 1}},

    {{1, 1, 1}, // 2
     {0, 0, 1},
     {1, 1, 1},
     {1, 0, 0},
     {1, 1, 1}},

    {{1, 1, 1}, // 3
     {0, 0, 1},
     {1, 1, 1},
     {0, 0, 1},
     {1, 1, 1}},

    {{1, 0, 1}, // 4
     {1, 0, 1},
     {1, 1, 1},
     {0, 0, 1},
     {0, 0, 1}},

    {{1, 1, 1}, // 5
     {1, 0, 0},
     {1, 1, 1},
     {0, 0, 1},
     {1, 1, 1}},

    {{1, 1, 1}, // 6
     {1, 0, 0},
     {1, 1, 1},
     {1, 0, 1},
     {1, 1, 1}},

    {{1, 1, 1}, // 7
     {0, 0, 1},
     {0, 0, 1},
     {0, 0, 1},
     {0, 0, 1}},

    {{1, 1, 1}, // 8
     {1, 0, 1},
     {1, 1, 1},
     {1, 0, 1},
     {1, 1, 1}},

    {{1, 1, 1}, // 9
     {1, 0, 1},
     {1, 1, 1},
     {0, 0, 1},
     {1, 1, 1}},

    {{0, 1, 0}, // A
     {1, 0, 1},
     {1, 1, 1},
     {1, 0, 1},
     {1, 0, 1}},

    {{1, 1, 0}, // B
     {1, 0, 1},
     {1, 1, 0},
     {1, 0, 1},
     {1, 1, 0}},

    {{0, 1, 1}, // C
     {1, 0, 0},
     {1, 0, 0},
     {1, 0, 0},
     {0, 1, 1}},

    {{1, 1, 0}, // D
     {1, 0, 1},
     {1, 0, 1},
     {1, 0, 1},
     {1, 1, 0}},

    {{1, 1, 1}, // E
     {1, 0, 0},
     {1, 1, 1},
     {1, 0, 0},
     {1, 1, 1}},

    {{1, 1, 1}, // F
     {1, 0, 0},
     {1, 1, 1},
     {1, 0, 0},
     {1, 0, 0}},

    {{0, 1, 1}, // G
     {1, 0, 0},
     {1, 0, 0},
     {1, 0, 1},
     {0, 1, 1}},

    {{1, 0, 1}, // H
     {1, 0, 1},
     {1, 1, 1},
     {1, 0, 1},
     {1, 0, 1}},

    {{1, 1, 1}, // I
     {0, 1, 0},
     {0, 1, 0},
     {0, 1, 0},
     {1, 1, 1}},

    {{0, 0, 1}, // J
     {0, 0, 1},
     {0, 0, 1},
     {1, 0, 1},
     {0, 1, 1}},

    {{1, 0, 1}, // K
     {1, 0, 1},
     {1, 1, 0},
     {1, 1, 0},
     {1, 0, 1}},

    {{1, 0, 0}, // L
     {1, 0, 0},
     {1, 0, 0},
     {1, 0, 0},
     {1, 1, 1}},

    {{1, 0, 1}, // M
     {1, 1, 1},
     {1, 1, 1},
     {1, 0, 1},
     {1, 0, 1}},

    {{1, 0, 1}, // N
     {1, 1, 1},
     {1, 1, 1},
     {1, 1, 1},
     {1, 0, 1}},

    {{1, 1, 1}, // O
     {1, 0, 1},
     {1, 0, 1},
     {1, 0, 1},
     {1, 1, 1}},

    {{1, 1, 1}, // P
     {1, 0, 1},
     {1, 1, 1},
     {1, 0, 0},
     {1, 0, 0}},

    {{0, 1, 0}, // Q
     {1, 0, 1},
     {1, 0, 1},
     {1, 1, 1},
     {0, 1, 1}},

    {{1, 1, 1}, // R
     {1, 0, 1},
     {1, 1, 1},
     {1, 1, 0},
     {1, 0, 1}},

    {{1, 1, 1}, // S
     {1, 0, 0},
     {1, 1, 1},
     {0, 0, 1},
     {1, 1, 1}},

    {{1, 1, 1}, // T
     {0, 1, 0},
     {0, 1, 0},
     {0, 1, 0},
     {0, 1, 0}},

    {{1, 0, 1}, // U
     {1, 0, 1},
     {1, 0, 1},
     {1, 0, 1},
     {1, 1, 1}},

    {{1, 0, 1}, // V
     {1, 0, 1},
     {1, 0, 1},
     {1, 0, 1},
     {0, 1, 0}},

    {{1, 0, 1}, // W
     {1, 0, 1},
     {1, 1, 1},
     {1, 1, 1},
     {1, 0, 1}},

    {{1, 0, 1}, // X
     {1, 0, 1},
     {0, 1, 0},
     {1, 0, 1},
     {1, 0, 1}},

    {{1, 0, 1}, // Y
     {1, 0, 1},
     {0, 1, 0},
     {0, 1, 0},
     {0, 1, 0}},

    {{1, 1, 1}, // Z
     {0, 0, 1},
     {0, 1, 0},
     {1, 0, 0},
     {1, 1, 1}},

    {{0, 0, 0}, // a
     {1, 1, 1},
     {0, 1, 1},
     {1, 0, 1},
     {0, 1, 1}},

    {{1, 0, 0}, // b
     {1, 0, 0},
     {1, 1, 0},
     {1, 0, 1},
     {1, 1, 0}},

    {{0, 0, 0}, // c
     {0, 1, 1},
     {1, 0, 0},
     {1, 0, 0},
     {0, 1, 1}},

    {{0, 0, 1}, // d
     {0, 0, 1},
     {0, 1, 1},
     {1, 0, 1},
     {0, 1, 1}},

    {{0, 0, 0}, // e
     {0, 1, 1},
     {1, 0, 1},
     {1, 1, 0},
     {0, 1, 1}},

    {{0, 1, 1}, // f
     {0, 1, 0},
     {1, 1, 1},
     {0, 1, 0},
     {0, 1, 0}},

    {{0, 1, 1}, // g
     {1, 0, 1},
     {0, 1, 1},
     {0, 0, 1},
     {1, 1, 0}},

    {{1, 0, 0}, // h
     {1, 0, 0},
     {1, 1, 1},
     {1, 0, 1},
     {1, 0, 1}},

    {{0, 1, 0}, // i
     {0, 0, 0},
     {1, 1, 0},
     {0, 1, 0},
     {1, 1, 1}},

    {{0, 1, 0}, // j
     {0, 0, 0},
     {0, 1, 0},
     {0, 1, 0},
     {1, 1, 0}},

    {{1, 0, 0}, // k
     {1, 0, 1},
     {1, 1, 0},
     {1, 0, 1},
     {1, 0, 1}},

    {{1, 1, 0}, // l
     {0, 1, 0},
     {0, 1, 0},
     {0, 1, 0},
     {1, 1, 1}},

    {{0, 0, 0}, // m
     {1, 0, 1},
     {1, 1, 1},
     {1, 0, 1},
     {1, 0, 1}},

    {{0, 0, 0}, // n
     {1, 1, 0},
     {1, 0, 1},
     {1, 0, 1},
     {1, 0, 1}},

    {{0, 0, 0}, // o
     {0, 1, 0},
     {1, 0, 1},
     {1, 0, 1},
     {0, 1, 0}},

    {{1, 1, 0}, // p
     {1, 0, 1},
     {1, 1, 1},
     {1, 0, 0},
     {1, 0, 0}},

    {{0, 1, 1}, // q
     {1, 0, 1},
     {0, 1, 1},
     {0, 0, 1},
     {0, 0, 1}},

    {{0, 0, 0}, // r
     {1, 0, 1},
     {1, 1, 0},
     {1, 0, 0},
     {1, 0, 0}},

    {{0, 1, 1}, // s
     {1, 0, 0},
     {0, 1, 1},
     {0, 0, 1},
     {1, 1, 0}},

    {{0, 1, 0}, // t
     {0, 1, 0},
     {1, 1, 1},
     {0, 1, 0},
     {0, 1, 1}},

    {{0, 0, 0}, // u
     {1, 0, 1},
     {1, 0, 1},
     {1, 0, 1},
     {0, 1, 1}},

    {{0, 0, 0}, // v
     {1, 0, 1},
     {1, 0, 1},
     {1, 0, 1},
     {0, 1, 0}},

    {{0, 0, 0}, // w
     {1, 0, 1},
     {1, 0, 1},
     {1, 1, 1},
     {1, 0, 1}},

    {{0, 0, 0}, // x
     {0, 0, 0},
     {1, 0, 1},
     {0, 1, 0},
     {1, 0, 1}},

    {{1, 0, 1}, // y
     {1, 0, 1},
     {0, 1, 1},
     {0, 0, 1},
     {1, 1, 0}},

    {{0, 0, 0}, // z
     {1, 1, 1},
     {0, 0, 1},
     {0, 1, 0},
     {1, 1, 1}},

};

String char_10_26_26 = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";

//字符显示
void show_char(int x, int y, char show_letter, const uint16_t color)
{
  int letter_number = char_10_26_26.indexOf(show_letter);
  for (int sketch_i = 0; sketch_i < 5; sketch_i++)
  {
    for (int sketch_j = 0; sketch_j < 3; sketch_j++)
    {
      if (new_char[letter_number][sketch_i][sketch_j] == 1)
      {
        pixelclock.drawPixel(sketch_j + x, sketch_i + y, color);
      }
    }
  }
}

//字符串显示（无特效）
void print_str(int x, int y, String the_str, const uint16_t color)
{
  pixelclock.fillScreen(0);
  for (unsigned int str_index = 0; str_index <= (String(the_str).length() - 1); str_index = str_index + 1)
  {
    show_char((x + 4 * str_index), y, String(the_str).charAt(str_index), color);
  }
}

//字符串显示（逐字浮现）
void show_str(int x, int y, String the_str, const uint16_t color, int mode = 1, int speed = 100)//mode:1=逐字浮现，2=整体浮现
{
  switch (mode)
  {
  case 1:
    pixelclock.fillScreen(0);
    for (unsigned int str_index = 0; str_index <= (String(the_str).length() - 1); str_index = str_index + 1)
    {
      show_char((x + 4 * str_index), y, String(the_str).charAt(str_index), color);
      pixelclock.show();
      delay(speed);
    }
    break;
  case 2:
    pixelclock.fillScreen(0);
    for (int i = 0; i <= 100; i = i + (1))
    {
      pixelclock.setBrightness(i);
      print_str(x, y, the_str, color);
      pixelclock.show();
      delay(speed);
    }
    break;
  }
}

//渐渐消失特效
void bright_slow_down(int p_bright, int speed = 5)
{
  for (int i = 0; i <= p_bright; i = i + (1))
  {
    pixelclock.setBrightness((p_bright - i));
    pixelclock.show();
    delay(speed);
  }
}